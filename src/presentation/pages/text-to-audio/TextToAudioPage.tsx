import { useState } from 'react';

import { textToAudioUseCase } from '@core/use-cases';
import {
  GPTMessage,
  MyMessage,
  TextSelectMessageBox,
  TypingLoader,
} from '@presentation/components';

interface Message {
  text: string;
  isGPT: boolean;
  audio?: string;
}

const voices = [
  { id: 'nova', text: 'Nova' },
  { id: 'alloy', text: 'Alloy' },
  { id: 'echo', text: 'Echo' },
  { id: 'fable', text: 'Fable' },
  { id: 'onyx', text: 'Onyx' },
  { id: 'shimmer', text: 'Shimmer' },
];

const TextToAudioPage = () => {
  const [isLoading, setIsLoading] = useState<boolean>(false);
  const [messages, setMessages] = useState<Message[]>([]);

  const handleSendMessage = async (text: string, selectedVoice: string) => {
    setIsLoading(true);
    setMessages((prev) => [...prev, { text, isGPT: false }]);

    const { ok, message, audioURL } = await textToAudioUseCase(
      text,
      selectedVoice,
    );

    setIsLoading(false);

    if (!ok) return;

    setMessages((prev) => [
      ...prev,
      {
        text: `${selectedVoice} - ${message}`,
        isGPT: true,
        audio: audioURL!,
      },
    ]);
  };

  return (
    <div className="chat-container">
      <div className="chat-messages">
        <div className="grid grid-cols-12 gap-y-2">
          {/* Welcome */}
          <GPTMessage text="Hello! You can write any text and I'll convert it to audio (generated by AI)" />

          {messages.map(({ isGPT, text, audio }, index) =>
            isGPT ? (
              <GPTMessage key={index} text={text} audio={audio!} />
            ) : (
              <MyMessage key={index} text={text} />
            ),
          )}

          {isLoading && (
            <div className="col-start-1 col-end-12 fade-in">
              <TypingLoader />
            </div>
          )}
        </div>
      </div>

      <TextSelectMessageBox
        onSendMessage={handleSendMessage}
        placeholder="Write anything"
        options={voices}
      />
    </div>
  );
};

export default TextToAudioPage;
